const HDWalletProvider = require('@truffle/hdwallet-provider');
const { Web3 } = require("web3");
const fs = require('fs');


const INFURA_KEY = "5acf8f5d12164dfc8a6bae26f6470508";
const QUICK_NODE_POLIGON_MATIC_URL = 'https://solemn-polished-snow.matic-testnet.discover.quiknode.pro/8fcc632afe32daabb5b7269050e6d1881316594e/'


const sepoliaProvider = new HDWalletProvider(getMnemonic(), getUrlByNetworkName('sepolia'));
const web3Sepolia = new Web3(sepoliaProvider);
const web3QuickNode = new Web3(QUICK_NODE_POLIGON_MATIC_URL);

function getMnemonic(){
    // mnemonic(secrete prhase) generated by BIP39.generateMnemonic();
    return fs.readFileSync(".secret").toString().trim();
}

function getUrlByNetworkName(networkName){
    return `https://${networkName}.infura.io/v3/${INFURA_KEY}`;
}

async function getBalanceByAccount(web3, account){
    return await web3.eth.getBalance(account);
}

async function getSepoliaAccountBalance(account){
    const balance = await getBalanceByAccount(web3Sepolia, account);
    return balance;
}

async function getQuickNodeAccountBalance(account){
    const balance = await getBalanceByAccount(web3QuickNode, account);
    return balance;
}
/**
 * 
 * 20LINK transaction: https://sepolia.etherscan.io/tx/0x380e90bfbb257d695f0b63395c0f2f8ceb333b34aaf4e4dd2926e6e394be5ece
 */

async function main(){

    const accounts = ['0xBfbFf873d21b4f80DE70Eed8C12d045F4d2Bad00','0x0844a46e5d5Bc0A871Cd562710C5EF2724CfB72f'];
    //transaction hash of LINK to the secondo Sepolia network
    const TRANSACTION_LINK_HASH = '0x380e90bfbb257d695f0b63395c0f2f8ceb333b34aaf4e4dd2926e6e394be5ece';
    let index = 1;
    for(let account of accounts){
        console.log(`##### Account${index}: `,account)
        console.log(`Sepolia network: account${index}:`, await getSepoliaAccountBalance(account));
        console.log(`Mumbai network: account${index}:`, await getQuickNodeAccountBalance(account));
    
        index++;
        console.log('');
    }

    const transaction = await web3Sepolia.eth.getTransaction(TRANSACTION_LINK_HASH);
    const PRINT_PRETTY_JSON = 2;
    console.log(`Second account '${accounts[1]}' LINK transaction:`, JSON.stringify(transaction, (key, value) =>
        typeof value === "bigint" ? value.toString() + "n" : value, PRINT_PRETTY_JSON
    ));

    sepoliaProvider.engine.stop();
}


main()
.then(() => process.exit(0))
.catch(error => {
    console.log(error);
    process.exit(1);
});